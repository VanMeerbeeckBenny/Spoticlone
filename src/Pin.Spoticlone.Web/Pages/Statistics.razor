@page "/Statistics"
@inject IStatisticsApiService _statisticsApiService

<h1>Statistics</h1>
<h2>Pick your top</h2>
<select class="form-select" @onchange="e => SetChosenTotalItems(e)">
    <option value="0">Pleas pick a option</option>
    <option value="3">Top 3</option>
    <option value="5">Top 5</option>
    <option value="10">Top 10</option>
</select>
@if (string.IsNullOrWhiteSpace(error))
{
    @if (CurrentStatistics != null)
    {

        <h3>Top Followers</h3>
        <ArtistList Artists="CurrentStatistics.TopFollowers"
                    ShowFollowers="true" />

        <h3>Top Popularities</h3>
        <ArtistList Artists="CurrentStatistics.TopPopularities"
                    ShowPopularity="true" />

        <h3>Top AlbumDurations</h3>

        <AlbumList Albums="CurrentStatistics.TopAlbumDurations" />



        <h3>Top Artist With Most Albums</h3>
        <ArtistList Artists="CurrentStatistics.TopArtistWithMostAlbums" />

        <h3>Top Track Durations</h3>
        <TrackList Tracks="CurrentStatistics.TopTrackDurations" />
    }
   
}
else
{
<div class="alert alert-danger" role="alert">
    @error
</div>
}

<Registration/>

@code {
    private int chosenTotalItems;
    private StatisticsModel CurrentStatistics;
    private string error;

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    private async Task Refresh()
    {
        var result = await _statisticsApiService.GetStatistics(chosenTotalItems);
        if (result.IsSucces) CurrentStatistics = result.statistics;
        else error = result.Error;
        StateHasChanged();
    }

    private async void SetChosenTotalItems(ChangeEventArgs e)
    {
        bool isIntiger = int.TryParse(e.Value.ToString(), out chosenTotalItems);
        await Refresh();
    }
}
