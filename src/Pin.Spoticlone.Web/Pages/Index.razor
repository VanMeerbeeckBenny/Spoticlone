@page "/"
@inject IArtistApiService ArtistService;


@if (error == null)
{   
    if (currentArtist == null)
    {
        <ArtistList Artists="Artists"
                    OnDetails="ShowDetails">
        </ArtistList>
    }
    else if (albumIdIsSet) { 
        <AlbumDetails AlbumId="albumId">

        </AlbumDetails>
    }
    else
    {
        <ArtistDetails Artist="currentArtist"
                       AlbumId="SetAlbumId"></ArtistDetails>
    }

}
else
{
    <div class="alert alert-danger" role="alert">
        @error
    </div>
}






@code{

    public IEnumerable<Artist> Artists { get; set; }
    public string error { get; set; }
    private Artist currentArtist;
    private Guid albumId;
    private bool albumIdIsSet;



    protected override async Task OnInitializedAsync()
    {
        await RefreshCategories();
    }

    public async Task RefreshCategories()
    {

        var result = await ArtistService.GetAllAsync();
        if (result.IsSucces) Artists = result.Items;
        else error = result.Error;

    }

    public void ShowDetails(Artist artist)
    {
        this.currentArtist = artist;
    }

    public async Task SetAlbumId(Guid id)
    {
        albumId = id;
        albumIdIsSet = true;

    }
}