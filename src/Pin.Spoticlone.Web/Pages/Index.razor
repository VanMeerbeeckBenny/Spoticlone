@page "/"
@inject IArtistApiService ArtistService;


@if (Error == null)
{
    @if (Artists != null)
    {
        if (currentArtist == null)
        {
            <ArtistList Artists="Artists"
                        OnDetails="ShowDetails">
            </ArtistList>
        }
        else
        {
            <ArtistDetails Artist="currentArtist"></ArtistDetails>
        }

    }
    else
    {
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    }



}
else
{
    <div class="alert alert-danger" role="alert">
        @Error
    </div>
}






@code{

    public IEnumerable<Artist> Artists { get; set; }
    public string Error { get; set; }
    private Artist currentArtist;



    protected override async Task OnInitializedAsync()
    {
        await RefreshCategories();
    }

    public async Task RefreshCategories()
    {

        var result = await ArtistService.GetAllAsync();
        if (result.IsSucces) Artists = result.Items;
        else Error = result.Error;

    }

    public void ShowDetails(Artist artist)
    {
        this.currentArtist = artist;
    }
}