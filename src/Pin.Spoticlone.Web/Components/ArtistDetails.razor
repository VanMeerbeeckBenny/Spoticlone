@inject IArtistApiService _artistApiService
@inject NavigationManager navigation
<header class="d-flex flex-column border-bottom">
    <div class="d-flex">
        <div class="w-75 text-center d-flex justify-content-center align-items-center">
            <h1 class="title">@Artist.Name</h1>
        </div>
        <figure class="small-img">
            <img class="small-img" src="@Artist.Image" alt="@Artist.Name" title="@Artist.Name" />
        </figure>
    </div>
    <div class="d-flex">
        <div class="me-5">Followers: <span class="red">@Artist.Followers</span></div>
        <div class="me-5">Popularity: <span class="red">@Artist.Popularity</span></div>
    </div>
   
</header>
<div>
    <div class="mt-3 mb-3">
        @foreach (var genre in Artist.Genres)
        {
            <span class="badge rounded-pill bg-secondary me-3 pe-4 ps-4 genre-badge">@genre.Name</span>

        }
    </div>
    <AlbumList ArtistId="Artist.Id"
               OnShowAlbumDetails="ShowalbumDetails">

    </AlbumList>
    @if (string.IsNullOrWhiteSpace(error))
    {
        <h2 class="mb-5">Here are some artist you might like!!</h2>
        <ArtistList Artists="artistsByFirstGenre"
                    OnDetails="SetArtist">
        </ArtistList>
    }
    else
    {
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    }

</div>



@code {

    private IEnumerable<Artist> artistsByFirstGenre;
    private string error;
    [Parameter]
    public Artist Artist { get; set; }
    [Parameter]
    public EventCallback<Guid> AlbumId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Guid GenreId = Artist.Genres.FirstOrDefault().Id;
        var result = await _artistApiService.GetByGenrdeIdAsync(GenreId);
        if (result.IsSucces) artistsByFirstGenre = result.Items;
        else error = result.Error;

    }

    public async Task ShowalbumDetails(Guid id)
    {
       await AlbumId.InvokeAsync(id);
    }

    public void SetArtist(Artist artist)
    {
        Artist = artist;
    }

}
